        # TODO get raw video and add the first model extraction features task
        for i in range(len(video_list)):
            v = video_list[i]['raw']
            #print(type(v))
            v = v.to(torch.device('cuda:1'))
            newfeats = extractor(v)
            feats = video_list[i]['feats']
            frames = video_list[i]['frames']
            #print(video_list[i]['video_id'])
            feats[ :1024 , frames ] = newfeats.squeeze().t().cpu() # does this write straight to the dict?
            video_list[i]['feats'] = feats
        # write feats to file
            file_name = os.path.join("/home/cruggles/actionformer_release-main/data/thumos/i3d_features", video_list[i]['video_id'] + '.npy')
            savefeats = np.load(file_name)
            #print(savefeats.shape)
            #print(len(frames))
            #print(len(video_list[i]['fileframes']))
            #print(newfeats.squeeze().t().shape)
            savefeats[video_list[i]['fileframes'], :1024] = newfeats.squeeze().detach().cpu().numpy()
            np.save(file_name, savefeats)
        # 
        #print('completed feature extraction', time.time()-t1)
        t1 = time.time()
        losses = model(video_list)
        #print('completed forward pass', time.time()-t1)
        t1 = time.time()
        losses['final_loss'].backward()
        #print('completed back pass', time.time()-t1)


